version: '3.8'
services:
  service-registry:
    image: gmorena/service-registry
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - craftnetwork
    restart: unless-stopped

  api-gateway:
    image: gmorena/api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - service-registry
      - comment-service
      - sampler-service
      - craftstore-service
      - craftsman-service
      - user-service
    networks:
      - craftnetwork
    restart: unless-stopped

  mariadb-comment:
    container_name: mariadb-comment
    image: "mariadb"
    ports:
      - "3308:3306"
    volumes:
      - comment-data:/var/lib/mariadb/data
    networks:
      - craftnetwork
    environment:
      MARIADB_DATABASE: dbcomments
      MARIADB_USER: comment
      MARIADB_PASSWORD: comment
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
      restart: unless-stopped

  comment-service:
    image: gmorena/comment-service
    container_name: comment-service
    ports:
      - "8084:8084"
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - service-registry
      - mariadb-comment
      - rabbitmq
    networks:
      - craftnetwork
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb-comment:3306/dbcomments
      - SERVER_PORT=8084
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - RABBITMQ_HOST=rabbitmq

  mariadb-sampler:
    container_name: mariadb-sampler
    image: "mariadb"
    ports:
      - "3307:3306"
    volumes:
      - sampler-data:/var/lib/mariadb/data
    networks:
      - craftnetwork
    environment:
      MARIADB_DATABASE: dbsamplers
      MARIADB_USER: sampler
      MARIADB_PASSWORD: sampler
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
      restart: unless-stopped

  sampler-service:
    image: gmorena/sampler-service
    container_name: sampler-service
    ports:
      - "8083:8083"
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - service-registry
      - mariadb-sampler
    networks:
      - craftnetwork
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb-sampler:3306/dbsamplers
      - SERVER_PORT=8083
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  mariadb-craftstore:
    container_name: mariadb-craftstore
    image: "mariadb"
    ports:
      - "3306:3306"
    volumes:
      - craftstore-data:/var/lib/mariadb/data
    networks:
      - craftnetwork
    environment:
      MARIADB_DATABASE: dbcraftstores
      MARIADB_USER: craftstore
      MARIADB_PASSWORD: craftstore
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
      restart: unless-stopped

  craftstore-service:
    image: gmorena/craftstore-service
    container_name: craftstore-service
    ports:
      - "8082:8082"
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - service-registry
      - mariadb-craftstore
      - sampler-service
      - rabbitmq
    networks:
      - craftnetwork
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb-craftstore:3306/dbcraftstores
      - SERVER_PORT=8082
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - RABBITMQ_HOST=rabbitmq

  mariadb-craftsman:
    container_name: mariadb-craftsman
    image: "mariadb"
    ports:
      - "3309:3306"
    volumes:
      - craftsman-data:/var/lib/mariadb/data
    networks:
      - craftnetwork
    environment:
      MARIADB_DATABASE: dbcraftsmen
      MARIADB_USER: craftsman
      MARIADB_PASSWORD: craftsman
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
      restart: unless-stopped

  craftsman-service:
    image: gmorena/craftsman-service
    container_name: craftsman-service
    ports:
      - "8081:8081"
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - service-registry
      - mariadb-craftsman
    networks:
      - craftnetwork
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb-craftsman:3306/dbcraftsmen
      - SERVER_PORT=8081
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  mariadb-user:
    container_name: mariadb-user
    image: "mariadb"
    ports:
      - "3310:3306"
    volumes:
      - user-data:/var/lib/mariadb/data
    networks:
      - craftnetwork
    environment:
      MARIADB_DATABASE: dbusers
      MARIADB_USER: user
      MARIADB_PASSWORD: user
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
      restart: unless-stopped

  user-service:
    image: gmorena/user-service
    container_name: user-service
    ports:
      - "8085:8085"
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - service-registry
      - mariadb-user
      - rabbitmq
    networks:
      - craftnetwork
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb-user:3306/dbusers
      - SERVER_PORT=8085
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - RABBITMQ_HOST=rabbitmq

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - craftnetwork
    restart: unless-stopped

  keycloak:
    container_name: keycloak
    image: "quay.io/keycloak/keycloak:latest"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev", "--http-port=8090"]
    ports:
      - "8090:8090"
    networks:
      - craftnetwork
    restart: unless-stopped

  # Development
  front-dev:
    image: gmorena/front-dev
    container_name: front-dev
    ports:
      - '3000:3000'
    depends_on:
      - api-gateway
      - keycloak
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      NEXT_APP_API_BASE_URL: http://api-gateway:8080
      NEXT_APP_DEFAULT_PAGE_SIZE: 1
      NEXT_APP_DEFAULT_PAGE_NUMBER: 1
      AUTH_URL: http://localhost:3000/api/auth
      AUTH_KEYCLOAK_ID: craftclient
      AUTH_KEYCLOAK_SECRET: bqANx87hQ2bALhqtjqglWAGCLQW8ITmi
      AUTH_KEYCLOAK_ISSUER: http://host.docker.internal:8090/realms/craftrealm
    networks:
      - craftnetwork
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: unless-stopped

networks:
  craftnetwork:

volumes:
  comment-data:
  sampler-data:
  craftstore-data:
  craftsman-data:
  user-data:
  rabbitmq-data:

# docker-compose build
# docker-compose up -d
# docker-compose down --rmi --volumes